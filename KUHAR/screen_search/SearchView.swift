import SwiftUI

struct SearchView: View {
    @State private var recipeName: String = ""
    @State private var foundRecipes: [Recipe] = [] // –°–ø–∏—Å–æ–∫ –Ω–∞–π–¥–µ–Ω–Ω—ã—Ö —Ä–µ—Ü–µ–ø—Ç–æ–≤
    @State private var selectedCategory: String? = nil
    @State private var selectedDiet: String? = nil
    @State private var selectedCuisine: String? = nil
    @State private var selectedSorting: String? = nil
    @State private var isCategoryExpanded = false
    @State private var isDietExpanded = false
    @State private var isCuisineExpanded = false
    @State private var isSortingExpanded = false
    @State private var isSearching: Bool = false  // –ü–µ—Ä–µ—Ö–æ–¥ –Ω–∞ —ç–∫—Ä–∞–Ω —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ —Ç–æ–ª—å–∫–æ –ø–æ –∫–Ω–æ–ø–∫–µ

    let categories = ["–ó–∞–≤—Ç—Ä–∞–∫–∏", "–ó–∞–∫—É—Å–∫–∏", "–ù–∞–ø–∏—Ç–∫–∏", "–û—Å–Ω–æ–≤–Ω—ã–µ –±–ª—é–¥–∞", "–ü–∞—Å—Ç–∞ –∏ –ø–∏—Ü—Ü–∞", "–í—ã–ø–µ—á–∫–∞ –∏ –¥–µ—Å–µ—Ä—Ç—ã", "–ó–∞–≥–æ—Ç–æ–≤–∫–∏", "–°—ç–Ω–¥–≤–∏—á–∏", "–†–∏–∑–æ—Ç—Ç–æ", "–°–æ—É—Å—ã", "–°–∞–ª–∞—Ç—ã", "–°—É–ø—ã"]
    
    let diets = ["–ö–µ—Ç–æ-–¥–∏–µ—Ç–∞", "–ë–µ–∑–≥–ª—é—Ç–µ–Ω–æ–≤–∞—è –¥–∏–µ—Ç–∞", "–í–µ–≥–µ—Ç–∞—Ä–∏–∞–Ω—Å–∫–∞—è –¥–∏–µ—Ç–∞", "–í–µ–≥–∞–Ω—Å–∫–∞—è –µ–¥–∞", "–ë–µ–∑–ª–∞–∫—Ç–æ–∑–Ω–∞—è –¥–∏–µ—Ç–∞", "–ù–∏–∑–∫–æ–∫–∞–ª–æ—Ä–∏–π–Ω–∞—è –µ–¥–∞", "–ü–æ—Å—Ç–Ω–∞—è –µ–¥–∞", "–ú–µ–Ω—é –ø—Ä–∏ –¥–∏–∞–±–µ—Ç–µ", "–î–µ—Ç—Å–∫–æ–µ –º–µ–Ω—é"]
    
    let cuisines = ["–ò—Ç–∞–ª—å—è–Ω—Å–∫–∞—è –∫—É—Ö–Ω—è", "–ì—Ä—É–∑–∏–Ω—Å–∫–∞—è –∫—É—Ö–Ω—è", "–ö–∏—Ç–∞–π—Å–∫–∞—è –∫—É—Ö–Ω—è", "–§—Ä–∞–Ω—Ü—É–∑—Å–∫–∞—è –∫—É—Ö–Ω—è", "–†—É—Å—Å–∫–∞—è –∫—É—Ö–Ω—è", "–Ø–ø–æ–Ω—Å–∫–∞—è –∫—É—Ö–Ω—è", "–ò–Ω–¥–∏–π—Å–∫–∞—è –∫—É—Ö–Ω—è", "–ú–µ–∫—Å–∏–∫–∞–Ω—Å–∫–∞—è –∫—É—Ö–Ω—è", "–ì—Ä–µ—á–µ—Å–∫–∞—è –∫—É—Ö–Ω—è", "–ö–æ—Ä–µ–π—Å–∫–∞—è –∫—É—Ö–Ω—è", "–¢—É—Ä–µ—Ü–∫–∞—è –∫—É—Ö–Ω—è", "–ë–µ–ª–æ—Ä—É—Å—Å–∫–∞—è –∫—É—Ö–Ω—è", "–ö–∞–≤–∫–∞–∑—Å–∫–∞—è –∫—É—Ö–Ω—è"]
    
    let sortingOptions = ["–ù–∞–∑–≤–∞–Ω–∏–µ (–ê-–Ø)", "–ù–∞–∑–≤–∞–Ω–∏–µ (–Ø-–ê)", "–ü–æ –≤—Ä–µ–º–µ–Ω–∏ (–º–µ–Ω—å—à–µ ‚Üí –±–æ–ª—å—à–µ)", "–ü–æ –≤—Ä–µ–º–µ–Ω–∏ (–±–æ–ª—å—à–µ ‚Üí –º–µ–Ω—å—à–µ)", "–ü–æ –∫–∞–ª–æ—Ä–∏—è–º (–º–µ–Ω—å—à–µ ‚Üí –±–æ–ª—å—à–µ)", "–ü–æ –∫–∞–ª–æ—Ä–∏—è–º (–±–æ–ª—å—à–µ ‚Üí –º–µ–Ω—å—à–µ)"]

    var body: some View {
        NavigationView {
            VStack {
                HStack {
                    Image(systemName: "magnifyingglass")
                        .foregroundColor(.gray)
                    TextField("–ù–∞–∑–≤–∞–Ω–∏–µ (–Ω–µ–æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ)", text: $recipeName)
                        .onChange(of: recipeName) { _ in
                            updateFoundRecipes()  // –û–±–Ω–æ–≤–ª—è–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ä–µ—Ü–µ–ø—Ç–æ–≤ –ø—Ä–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–∏ —Ç–µ–∫—Å—Ç–∞
                        }
                }
                .padding()
                .background(RoundedRectangle(cornerRadius: 8).stroke(Color.gray))
                .padding(.horizontal)
                .padding(.top)

                List {
                    ExpandableFilterSection(title: "–ö–∞—Ç–µ–≥–æ—Ä–∏—è", options: categories, selectedOption: $selectedCategory, isExpanded: $isCategoryExpanded)
                        .onChange(of: selectedCategory) { _ in
                            updateFoundRecipes()  // –û–±–Ω–æ–≤–ª—è–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ä–µ—Ü–µ–ø—Ç–æ–≤ –ø—Ä–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–∏ —Ñ–∏–ª—å—Ç—Ä–∞
                        }
                    ExpandableFilterSection(title: "–î–∏–µ—Ç–∞", options: diets, selectedOption: $selectedDiet, isExpanded: $isDietExpanded)
                        .onChange(of: selectedDiet) { _ in
                            updateFoundRecipes()  // –û–±–Ω–æ–≤–ª—è–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ä–µ—Ü–µ–ø—Ç–æ–≤ –ø—Ä–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–∏ —Ñ–∏–ª—å—Ç—Ä–∞
                        }
                    ExpandableFilterSection(title: "–ö—É—Ö–Ω—è", options: cuisines, selectedOption: $selectedCuisine, isExpanded: $isCuisineExpanded)
                        .onChange(of: selectedCuisine) { _ in
                            updateFoundRecipes()  // –û–±–Ω–æ–≤–ª—è–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ä–µ—Ü–µ–ø—Ç–æ–≤ –ø—Ä–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–∏ —Ñ–∏–ª—å—Ç—Ä–∞
                        }
                    ExpandableFilterSection(title: "–°–æ—Ä—Ç–∏—Ä–æ–≤–∫–∞", options: sortingOptions, selectedOption: $selectedSorting, isExpanded: $isSortingExpanded)
                        .onChange(of: selectedSorting) { _ in
                            updateFoundRecipes()  // –û–±–Ω–æ–≤–ª—è–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ä–µ—Ü–µ–ø—Ç–æ–≤ –ø—Ä–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–∏ —Ñ–∏–ª—å—Ç—Ä–∞
                        }
                }
                .listStyle(InsetGroupedListStyle())

                // –¢–µ–∫—Å—Ç —Å –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ–º –Ω–∞–π–¥–µ–Ω–Ω—ã—Ö —Ä–µ—Ü–µ–ø—Ç–æ–≤
                Text("–ù–∞–π–¥–µ–Ω–æ \(foundRecipes.count) —Ä–µ—Ü–µ–ø—Ç–æ–≤")
                    .padding()

                // –°–∫—Ä—ã–≤–∞–µ–º NavigationLink, —á—Ç–æ–±—ã –∏–∑–±–µ–∂–∞—Ç—å –ø–µ—Ä–µ—Ö–æ–¥–∞ –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ —Å—Ä–∞–∑—É
                NavigationLink(destination: RecipeResultsView(recipes: foundRecipes), isActive: $isSearching) {
                    EmptyView()
                }
                .hidden()

                Button(action: performSearch) {
                    Text("–ü–æ–∏—Å–∫")
                        .frame(maxWidth: .infinity)
                        .frame(height: 50)
                        .background(Color.orange)
                        .foregroundColor(.white)
                        .cornerRadius(10)
                        .padding(.horizontal)
                        .padding(.bottom)
                }
            }
        }
    }

    private func performSearch() {
        // –¢–æ–ª—å–∫–æ –ø—Ä–∏ –Ω–∞–∂–∞—Ç–∏–∏ –∫–Ω–æ–ø–∫–∏ "–ü–æ–∏—Å–∫" –≤—ã–ø–æ–ª–Ω—è–µ–º –ø–æ–∏—Å–∫
        foundRecipes = DatabaseManager.shared.fetchRecipesByFilters(
            title: recipeName,
            category: selectedCategory,
            diet: selectedDiet,
            cuisine: selectedCuisine,
            sorting: selectedSorting
        )
        isSearching = true  // –ü–µ—Ä–µ—Ö–æ–¥ –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É —Å —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞–º–∏ —Ç–æ–ª—å–∫–æ –ø–æ—Å–ª–µ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –ø–æ–∏—Å–∫–∞
    }

    // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Å–ø–∏—Å–∫–∞ –Ω–∞–π–¥–µ–Ω–Ω—ã—Ö —Ä–µ—Ü–µ–ø—Ç–æ–≤ (–±–µ–∑ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –ø–æ–∏—Å–∫–∞)
    private func updateFoundRecipes() {
        // –ü–æ–∫–∞ —á—Ç–æ –ø—Ä–æ—Å—Ç–æ –æ–±–Ω–æ–≤–ª—è–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ä–µ—Ü–µ–ø—Ç–æ–≤, –Ω–æ –Ω–µ –≤—ã–ø–æ–ª–Ω—è–µ–º –ø–æ–∏—Å–∫
        foundRecipes = DatabaseManager.shared.fetchRecipesByFilters(
            title: recipeName,
            category: selectedCategory,
            diet: selectedDiet,
            cuisine: selectedCuisine,
            sorting: selectedSorting
        )
    }
}

// üìå –†–∞–∑–≤–æ—Ä–∞—á–∏–≤–∞—é—â–∏–µ—Å—è —Å–µ–∫—Ü–∏–∏ —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–∏ –∏ —Å–æ—Ä—Ç–∏—Ä–æ–≤–∫–∏
struct ExpandableFilterSection: View {
    let title: String
    let options: [String]
    @Binding var selectedOption: String?
    @Binding var isExpanded: Bool

    var body: some View {
        Section {
            Button(action: { isExpanded.toggle() }) {
                HStack {
                    Text(selectedOption ?? title)
                        .foregroundColor(selectedOption == nil ? .gray : .black)
                    Spacer()
                    Image(systemName: isExpanded ? "chevron.up" : "chevron.down")
                        .foregroundColor(.gray)
                }
            }
            
            if isExpanded {
                ForEach(options, id: \.self) { option in
                    HStack {
                        Image(systemName: selectedOption == option ? "checkmark.square.fill" : "square")
                            .foregroundColor(selectedOption == option ? .orange : .gray)
                            .onTapGesture {
                                selectedOption = (selectedOption == option) ? nil : option
                                isExpanded = false
                            }
                        Text(option)
                    }
                }
            }
        } header: {
            Text(title)
                .font(.headline)
        }
    }
}
